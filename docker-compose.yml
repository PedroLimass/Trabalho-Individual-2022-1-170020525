version: "3.5"

services:
  db:
    container_name: db_library
    image: postgres
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=library_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
    networks:
      - library-net
  web:
    container_name: backend_library
    build:
      context: ./library_back
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

    volumes:
      - ./library_back:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
    depends_on:
      - db
    networks:
      - library-net

  frontend:
    build: 
      context: ./library_front
    container_name: frontend_library
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"    
    environment:
      CHOKIDAR_USEPOLLING: "true"
    command: npm start
    networks:
       - library-net
       
  nginx:
    image: nginx    
    container_name: nginx_library
    depends_on:
      - web
      - db
      - frontend
    networks:
      - library-net
    ports:
     - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

networks:
  library-net:
    name: library-net
    driver: bridge
